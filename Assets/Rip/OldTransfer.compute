#pragma kernel CSMain




  struct Vert{

   float life;
   float3 pos;
   float3 vel;
   float3 nor;
   float2 uv;
   float3 targetPos;
   float3 debug;

  };


int _TailSize;
int _NumVerts;
int _TotalOld;

RWStructuredBuffer<Vert> vertBuffer;
RWStructuredBuffer<float4>oldBuffer;





#define NR_THREADS 64

[numthreads(NR_THREADS,1,1)]
void CSMain (uint threadID : SV_GroupIndex, uint3 u3GroupID : SV_GroupID, uint3 id : SV_DispatchThreadID) {

  int pID = threadID + u3GroupID * NR_THREADS;

  if( pID < _NumVerts){

    Vert vert = vertBuffer[pID];

    if( pID*_TailSize + _TailSize < _TotalOld){

    oldBuffer[pID*_TailSize]  = float4( vert.pos , vert.life);

      for( int i = _TailSize-1; i > 0; i--){
        oldBuffer[pID*_TailSize + i] = oldBuffer[pID*_TailSize + i-1];
      }

    }
  }
}